fragment Merchant on merchants {
  address
  bankAccountEur
  bankName
  bankAccountPln
  city
  companyName
  country
  email
  id
  issuerName
  postCode
  vatId
}

query merchant($id: Int_comparison_exp!) {
  merchants(where: { id: $id }) {
    ...Merchant
  }
}

query merchantList(
  $limit: Int = 10
  $offset: Int = 0
  $order_by: [merchants_order_by!] = {}
  $where: merchants_bool_exp = {}
) {
  merchants(limit: $limit, offset: $offset, order_by: $order_by, where: $where) {
    ...Merchant
  }
  merchants_aggregate {
    aggregate {
      totalCount: count
    }
  }
}

query merchantDistinct {
  merchants_distinct_on_city: merchants_aggregate(distinct_on: city) {
    nodes {
      city
    }
  }
  merchants_distinct_on_bank: merchants_aggregate(distinct_on: country) {
    nodes {
      country
    }
  }
}

mutation createMerchant($object: merchants_insert_input!) {
  insert_merchants_one(object: $object) {
    ...Merchant
  }
}

mutation deleteMerchant($where: merchants_bool_exp = {}) {
  delete_merchants(where: $where) {
    returning {
      id
    }
  }
}

mutation updateMerchant($where: merchants_bool_exp = {}, $_set: merchants_set_input = {}) {
  update_merchants(where: $where, _set: $_set) {
    returning {
      ...Merchant
    }
  }
}
