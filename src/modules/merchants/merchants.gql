fragment MerchantContent on Merchant {
  id
  companyName
  address
  postCode
  city
  country
  VATId
  bankAccountPln
  bankAccountEur
  bankName
  email
  issuerName
}

mutation createMerchant($data: MerchantCreateInput!) {
  createdMerchant: createOneMerchant(data: $data) {
    id
  }
}

mutation deleteMerchant($id: Int!) {
  deletedMerchant: deleteOneMerchant(where: { id: $id }) {
    id
  }
}

mutation updateMerchant($data: MerchantUpdateInput!, $id: Int!) {
  updatedMerchant: updateOneMerchant(data: $data, where: { id: $id }) {
    ...MerchantContent
  }
}

query merchant($where: MerchantWhereUniqueInput!) {
  merchant(where: $where) {
    ...MerchantContent
  }
}

query merchantList(
  $orderBy: [MerchantOrderByInput!] = []
  $where: MerchantWhereInput
  $skip: Int = 0
  $take: Int = 100
) {
  merchantList: merchants(orderBy: $orderBy, where: $where, skip: $skip, take: $take) {
    ...MerchantContent
  }
  totalCount: totalMerchantsCount
}

fragment MerchantListItemContent on Merchant {
  ...MerchantContent
  Scenario {
    id
    name
  }
}

query paginatedMerchantList(
  $orderBy: [MerchantOrderByInput!] = []
  $where: MerchantWhereInput
  $skip: Int!
  $take: Int = 10
) {
  totalCount: totalMerchantsCount
  filters: merchantsFilters {
    country
    city
    bank
  }
  merchantList: merchants(orderBy: $orderBy, where: $where, skip: $skip, take: $take) {
    ...MerchantListItemContent
  }
}
