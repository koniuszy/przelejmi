/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./../graphql/context"


declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ClientCreateInput: { // input type
    Scenario?: NexusGenInputs['ScenarioCreateNestedManyWithoutClientInput'] | null; // ScenarioCreateNestedManyWithoutClientInput
    VATId?: string | null; // String
    address: string; // String!
    city: string; // String!
    country: string; // String!
    name: string; // String!
    postCode: string; // String!
  }
  ClientCreateNestedOneWithoutScenarioInput: { // input type
    connect?: NexusGenInputs['ClientWhereUniqueInput'] | null; // ClientWhereUniqueInput
    connectOrCreate?: NexusGenInputs['ClientCreateOrConnectWithoutScenarioInput'] | null; // ClientCreateOrConnectWithoutScenarioInput
    create?: NexusGenInputs['ClientCreateWithoutScenarioInput'] | null; // ClientCreateWithoutScenarioInput
  }
  ClientCreateOrConnectWithoutScenarioInput: { // input type
    create: NexusGenInputs['ClientCreateWithoutScenarioInput']; // ClientCreateWithoutScenarioInput!
    where: NexusGenInputs['ClientWhereUniqueInput']; // ClientWhereUniqueInput!
  }
  ClientCreateWithoutScenarioInput: { // input type
    VATId?: string | null; // String
    address: string; // String!
    city: string; // String!
    country: string; // String!
    name: string; // String!
    postCode: string; // String!
  }
  ClientOrderByInput: { // input type
    VATId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    address?: NexusGenEnums['SortOrder'] | null; // SortOrder
    city?: NexusGenEnums['SortOrder'] | null; // SortOrder
    country?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    name?: NexusGenEnums['SortOrder'] | null; // SortOrder
    postCode?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  ClientUpdateInput: { // input type
    Scenario?: NexusGenInputs['ScenarioUpdateManyWithoutClientInput'] | null; // ScenarioUpdateManyWithoutClientInput
    VATId?: string | null; // String
    address?: string | null; // String
    city?: string | null; // String
    country?: string | null; // String
    name?: string | null; // String
    postCode?: string | null; // String
  }
  ClientUpdateOneRequiredWithoutScenarioInput: { // input type
    connect?: NexusGenInputs['ClientWhereUniqueInput'] | null; // ClientWhereUniqueInput
    connectOrCreate?: NexusGenInputs['ClientCreateOrConnectWithoutScenarioInput'] | null; // ClientCreateOrConnectWithoutScenarioInput
    create?: NexusGenInputs['ClientCreateWithoutScenarioInput'] | null; // ClientCreateWithoutScenarioInput
    update?: NexusGenInputs['ClientUpdateWithoutScenarioInput'] | null; // ClientUpdateWithoutScenarioInput
    upsert?: NexusGenInputs['ClientUpsertWithoutScenarioInput'] | null; // ClientUpsertWithoutScenarioInput
  }
  ClientUpdateWithoutScenarioInput: { // input type
    VATId?: string | null; // String
    address?: string | null; // String
    city?: string | null; // String
    country?: string | null; // String
    name?: string | null; // String
    postCode?: string | null; // String
  }
  ClientUpsertWithoutScenarioInput: { // input type
    create: NexusGenInputs['ClientCreateWithoutScenarioInput']; // ClientCreateWithoutScenarioInput!
    update: NexusGenInputs['ClientUpdateWithoutScenarioInput']; // ClientUpdateWithoutScenarioInput!
  }
  ClientWhereInput: { // input type
    AND?: NexusGenInputs['ClientWhereInput'][] | null; // [ClientWhereInput!]
    NOT?: NexusGenInputs['ClientWhereInput'][] | null; // [ClientWhereInput!]
    OR?: NexusGenInputs['ClientWhereInput'][] | null; // [ClientWhereInput!]
    Scenario?: NexusGenInputs['ScenarioListRelationFilter'] | null; // ScenarioListRelationFilter
    VATId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    address?: NexusGenInputs['StringFilter'] | null; // StringFilter
    city?: NexusGenInputs['StringFilter'] | null; // StringFilter
    country?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    postCode?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  ClientWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  DateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  EnumUnitFilter: { // input type
    equals?: NexusGenEnums['Unit'] | null; // Unit
    in?: NexusGenEnums['Unit'][] | null; // [Unit!]
    not?: NexusGenInputs['NestedEnumUnitFilter'] | null; // NestedEnumUnitFilter
    notIn?: NexusGenEnums['Unit'][] | null; // [Unit!]
  }
  EnumVATFilter: { // input type
    equals?: NexusGenEnums['VAT'] | null; // VAT
    in?: NexusGenEnums['VAT'][] | null; // [VAT!]
    not?: NexusGenInputs['NestedEnumVATFilter'] | null; // NestedEnumVATFilter
    notIn?: NexusGenEnums['VAT'][] | null; // [VAT!]
  }
  IntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntFilter'] | null; // NestedIntFilter
    notIn?: number[] | null; // [Int!]
  }
  MerchantCreateInput: { // input type
    Scenario?: NexusGenInputs['ScenarioCreateNestedManyWithoutMerchantInput'] | null; // ScenarioCreateNestedManyWithoutMerchantInput
    VATId: string; // String!
    address: string; // String!
    bankAccountEur?: string | null; // String
    bankAccountPln: string; // String!
    bankName: string; // String!
    city: string; // String!
    companyName: string; // String!
    country: string; // String!
    email: string; // String!
    issuerName: string; // String!
    postCode: string; // String!
  }
  MerchantCreateNestedOneWithoutScenarioInput: { // input type
    connect?: NexusGenInputs['MerchantWhereUniqueInput'] | null; // MerchantWhereUniqueInput
    connectOrCreate?: NexusGenInputs['MerchantCreateOrConnectWithoutScenarioInput'] | null; // MerchantCreateOrConnectWithoutScenarioInput
    create?: NexusGenInputs['MerchantCreateWithoutScenarioInput'] | null; // MerchantCreateWithoutScenarioInput
  }
  MerchantCreateOrConnectWithoutScenarioInput: { // input type
    create: NexusGenInputs['MerchantCreateWithoutScenarioInput']; // MerchantCreateWithoutScenarioInput!
    where: NexusGenInputs['MerchantWhereUniqueInput']; // MerchantWhereUniqueInput!
  }
  MerchantCreateWithoutScenarioInput: { // input type
    VATId: string; // String!
    address: string; // String!
    bankAccountEur?: string | null; // String
    bankAccountPln: string; // String!
    bankName: string; // String!
    city: string; // String!
    companyName: string; // String!
    country: string; // String!
    email: string; // String!
    issuerName: string; // String!
    postCode: string; // String!
  }
  MerchantOrderByInput: { // input type
    VATId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    address?: NexusGenEnums['SortOrder'] | null; // SortOrder
    bankAccountEur?: NexusGenEnums['SortOrder'] | null; // SortOrder
    bankAccountPln?: NexusGenEnums['SortOrder'] | null; // SortOrder
    bankName?: NexusGenEnums['SortOrder'] | null; // SortOrder
    city?: NexusGenEnums['SortOrder'] | null; // SortOrder
    companyName?: NexusGenEnums['SortOrder'] | null; // SortOrder
    country?: NexusGenEnums['SortOrder'] | null; // SortOrder
    email?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    issuerName?: NexusGenEnums['SortOrder'] | null; // SortOrder
    postCode?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  MerchantUpdateInput: { // input type
    Scenario?: NexusGenInputs['ScenarioUpdateManyWithoutMerchantInput'] | null; // ScenarioUpdateManyWithoutMerchantInput
    VATId?: string | null; // String
    address?: string | null; // String
    bankAccountEur?: string | null; // String
    bankAccountPln?: string | null; // String
    bankName?: string | null; // String
    city?: string | null; // String
    companyName?: string | null; // String
    country?: string | null; // String
    email?: string | null; // String
    issuerName?: string | null; // String
    postCode?: string | null; // String
  }
  MerchantUpdateOneRequiredWithoutScenarioInput: { // input type
    connect?: NexusGenInputs['MerchantWhereUniqueInput'] | null; // MerchantWhereUniqueInput
    connectOrCreate?: NexusGenInputs['MerchantCreateOrConnectWithoutScenarioInput'] | null; // MerchantCreateOrConnectWithoutScenarioInput
    create?: NexusGenInputs['MerchantCreateWithoutScenarioInput'] | null; // MerchantCreateWithoutScenarioInput
    update?: NexusGenInputs['MerchantUpdateWithoutScenarioInput'] | null; // MerchantUpdateWithoutScenarioInput
    upsert?: NexusGenInputs['MerchantUpsertWithoutScenarioInput'] | null; // MerchantUpsertWithoutScenarioInput
  }
  MerchantUpdateWithoutScenarioInput: { // input type
    VATId?: string | null; // String
    address?: string | null; // String
    bankAccountEur?: string | null; // String
    bankAccountPln?: string | null; // String
    bankName?: string | null; // String
    city?: string | null; // String
    companyName?: string | null; // String
    country?: string | null; // String
    email?: string | null; // String
    issuerName?: string | null; // String
    postCode?: string | null; // String
  }
  MerchantUpsertWithoutScenarioInput: { // input type
    create: NexusGenInputs['MerchantCreateWithoutScenarioInput']; // MerchantCreateWithoutScenarioInput!
    update: NexusGenInputs['MerchantUpdateWithoutScenarioInput']; // MerchantUpdateWithoutScenarioInput!
  }
  MerchantWhereInput: { // input type
    AND?: NexusGenInputs['MerchantWhereInput'][] | null; // [MerchantWhereInput!]
    NOT?: NexusGenInputs['MerchantWhereInput'][] | null; // [MerchantWhereInput!]
    OR?: NexusGenInputs['MerchantWhereInput'][] | null; // [MerchantWhereInput!]
    Scenario?: NexusGenInputs['ScenarioListRelationFilter'] | null; // ScenarioListRelationFilter
    VATId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    address?: NexusGenInputs['StringFilter'] | null; // StringFilter
    bankAccountEur?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    bankAccountPln?: NexusGenInputs['StringFilter'] | null; // StringFilter
    bankName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    city?: NexusGenInputs['StringFilter'] | null; // StringFilter
    companyName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    country?: NexusGenInputs['StringFilter'] | null; // StringFilter
    email?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    issuerName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    postCode?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  MerchantWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  NestedDateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  NestedEnumUnitFilter: { // input type
    equals?: NexusGenEnums['Unit'] | null; // Unit
    in?: NexusGenEnums['Unit'][] | null; // [Unit!]
    not?: NexusGenInputs['NestedEnumUnitFilter'] | null; // NestedEnumUnitFilter
    notIn?: NexusGenEnums['Unit'][] | null; // [Unit!]
  }
  NestedEnumVATFilter: { // input type
    equals?: NexusGenEnums['VAT'] | null; // VAT
    in?: NexusGenEnums['VAT'][] | null; // [VAT!]
    not?: NexusGenInputs['NestedEnumVATFilter'] | null; // NestedEnumVATFilter
    notIn?: NexusGenEnums['VAT'][] | null; // [VAT!]
  }
  NestedIntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntFilter'] | null; // NestedIntFilter
    notIn?: number[] | null; // [Int!]
  }
  NestedStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  NestedStringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  ScenarioCreateInput: { // input type
    VAT: NexusGenEnums['VAT']; // VAT!
    client: NexusGenInputs['ClientCreateNestedOneWithoutScenarioInput']; // ClientCreateNestedOneWithoutScenarioInput!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays: number; // Int!
    imageUrl: string; // String!
    merchant: NexusGenInputs['MerchantCreateNestedOneWithoutScenarioInput']; // MerchantCreateNestedOneWithoutScenarioInput!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    paymentType: string; // String!
    unitType: NexusGenEnums['Unit']; // Unit!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioCreateManyClientInput: { // input type
    VAT: NexusGenEnums['VAT']; // VAT!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays: number; // Int!
    id?: number | null; // Int
    imageUrl: string; // String!
    merchantId: number; // Int!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    paymentType: string; // String!
    unitType: NexusGenEnums['Unit']; // Unit!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioCreateManyClientInputEnvelope: { // input type
    data?: NexusGenInputs['ScenarioCreateManyClientInput'][] | null; // [ScenarioCreateManyClientInput!]
    skipDuplicates?: boolean | null; // Boolean
  }
  ScenarioCreateManyMerchantInput: { // input type
    VAT: NexusGenEnums['VAT']; // VAT!
    clientId: number; // Int!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays: number; // Int!
    id?: number | null; // Int
    imageUrl: string; // String!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    paymentType: string; // String!
    unitType: NexusGenEnums['Unit']; // Unit!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioCreateManyMerchantInputEnvelope: { // input type
    data?: NexusGenInputs['ScenarioCreateManyMerchantInput'][] | null; // [ScenarioCreateManyMerchantInput!]
    skipDuplicates?: boolean | null; // Boolean
  }
  ScenarioCreateNestedManyWithoutClientInput: { // input type
    connect?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['ScenarioCreateOrConnectWithoutClientInput'][] | null; // [ScenarioCreateOrConnectWithoutClientInput!]
    create?: NexusGenInputs['ScenarioCreateWithoutClientInput'][] | null; // [ScenarioCreateWithoutClientInput!]
    createMany?: NexusGenInputs['ScenarioCreateManyClientInputEnvelope'] | null; // ScenarioCreateManyClientInputEnvelope
  }
  ScenarioCreateNestedManyWithoutMerchantInput: { // input type
    connect?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['ScenarioCreateOrConnectWithoutMerchantInput'][] | null; // [ScenarioCreateOrConnectWithoutMerchantInput!]
    create?: NexusGenInputs['ScenarioCreateWithoutMerchantInput'][] | null; // [ScenarioCreateWithoutMerchantInput!]
    createMany?: NexusGenInputs['ScenarioCreateManyMerchantInputEnvelope'] | null; // ScenarioCreateManyMerchantInputEnvelope
  }
  ScenarioCreateOrConnectWithoutClientInput: { // input type
    create: NexusGenInputs['ScenarioCreateWithoutClientInput']; // ScenarioCreateWithoutClientInput!
    where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
  }
  ScenarioCreateOrConnectWithoutMerchantInput: { // input type
    create: NexusGenInputs['ScenarioCreateWithoutMerchantInput']; // ScenarioCreateWithoutMerchantInput!
    where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
  }
  ScenarioCreateWithoutClientInput: { // input type
    VAT: NexusGenEnums['VAT']; // VAT!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays: number; // Int!
    imageUrl: string; // String!
    merchant: NexusGenInputs['MerchantCreateNestedOneWithoutScenarioInput']; // MerchantCreateNestedOneWithoutScenarioInput!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    paymentType: string; // String!
    unitType: NexusGenEnums['Unit']; // Unit!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioCreateWithoutMerchantInput: { // input type
    VAT: NexusGenEnums['VAT']; // VAT!
    client: NexusGenInputs['ClientCreateNestedOneWithoutScenarioInput']; // ClientCreateNestedOneWithoutScenarioInput!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays: number; // Int!
    imageUrl: string; // String!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    paymentType: string; // String!
    unitType: NexusGenEnums['Unit']; // Unit!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioListRelationFilter: { // input type
    every?: NexusGenInputs['ScenarioWhereInput'] | null; // ScenarioWhereInput
    none?: NexusGenInputs['ScenarioWhereInput'] | null; // ScenarioWhereInput
    some?: NexusGenInputs['ScenarioWhereInput'] | null; // ScenarioWhereInput
  }
  ScenarioScalarWhereInput: { // input type
    AND?: NexusGenInputs['ScenarioScalarWhereInput'][] | null; // [ScenarioScalarWhereInput!]
    NOT?: NexusGenInputs['ScenarioScalarWhereInput'][] | null; // [ScenarioScalarWhereInput!]
    OR?: NexusGenInputs['ScenarioScalarWhereInput'][] | null; // [ScenarioScalarWhereInput!]
    VAT?: NexusGenInputs['EnumVATFilter'] | null; // EnumVATFilter
    clientId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    dueDateDays?: NexusGenInputs['IntFilter'] | null; // IntFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    imageUrl?: NexusGenInputs['StringFilter'] | null; // StringFilter
    merchantId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    netPerOne?: NexusGenInputs['IntFilter'] | null; // IntFilter
    notes?: NexusGenInputs['StringFilter'] | null; // StringFilter
    paymentType?: NexusGenInputs['StringFilter'] | null; // StringFilter
    unitType?: NexusGenInputs['EnumUnitFilter'] | null; // EnumUnitFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  ScenarioUpdateInput: { // input type
    VAT?: NexusGenEnums['VAT'] | null; // VAT
    client?: NexusGenInputs['ClientUpdateOneRequiredWithoutScenarioInput'] | null; // ClientUpdateOneRequiredWithoutScenarioInput
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays?: number | null; // Int
    imageUrl?: string | null; // String
    merchant?: NexusGenInputs['MerchantUpdateOneRequiredWithoutScenarioInput'] | null; // MerchantUpdateOneRequiredWithoutScenarioInput
    name?: string | null; // String
    netPerOne?: number | null; // Int
    notes?: string | null; // String
    paymentType?: string | null; // String
    unitType?: NexusGenEnums['Unit'] | null; // Unit
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioUpdateManyMutationInput: { // input type
    VAT?: NexusGenEnums['VAT'] | null; // VAT
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays?: number | null; // Int
    imageUrl?: string | null; // String
    name?: string | null; // String
    netPerOne?: number | null; // Int
    notes?: string | null; // String
    paymentType?: string | null; // String
    unitType?: NexusGenEnums['Unit'] | null; // Unit
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioUpdateManyWithWhereWithoutClientInput: { // input type
    data: NexusGenInputs['ScenarioUpdateManyMutationInput']; // ScenarioUpdateManyMutationInput!
    where: NexusGenInputs['ScenarioScalarWhereInput']; // ScenarioScalarWhereInput!
  }
  ScenarioUpdateManyWithWhereWithoutMerchantInput: { // input type
    data: NexusGenInputs['ScenarioUpdateManyMutationInput']; // ScenarioUpdateManyMutationInput!
    where: NexusGenInputs['ScenarioScalarWhereInput']; // ScenarioScalarWhereInput!
  }
  ScenarioUpdateManyWithoutClientInput: { // input type
    connect?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['ScenarioCreateOrConnectWithoutClientInput'][] | null; // [ScenarioCreateOrConnectWithoutClientInput!]
    create?: NexusGenInputs['ScenarioCreateWithoutClientInput'][] | null; // [ScenarioCreateWithoutClientInput!]
    createMany?: NexusGenInputs['ScenarioCreateManyClientInputEnvelope'] | null; // ScenarioCreateManyClientInputEnvelope
    delete?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    deleteMany?: NexusGenInputs['ScenarioScalarWhereInput'][] | null; // [ScenarioScalarWhereInput!]
    disconnect?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    set?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    update?: NexusGenInputs['ScenarioUpdateWithWhereUniqueWithoutClientInput'][] | null; // [ScenarioUpdateWithWhereUniqueWithoutClientInput!]
    updateMany?: NexusGenInputs['ScenarioUpdateManyWithWhereWithoutClientInput'][] | null; // [ScenarioUpdateManyWithWhereWithoutClientInput!]
    upsert?: NexusGenInputs['ScenarioUpsertWithWhereUniqueWithoutClientInput'][] | null; // [ScenarioUpsertWithWhereUniqueWithoutClientInput!]
  }
  ScenarioUpdateManyWithoutMerchantInput: { // input type
    connect?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['ScenarioCreateOrConnectWithoutMerchantInput'][] | null; // [ScenarioCreateOrConnectWithoutMerchantInput!]
    create?: NexusGenInputs['ScenarioCreateWithoutMerchantInput'][] | null; // [ScenarioCreateWithoutMerchantInput!]
    createMany?: NexusGenInputs['ScenarioCreateManyMerchantInputEnvelope'] | null; // ScenarioCreateManyMerchantInputEnvelope
    delete?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    deleteMany?: NexusGenInputs['ScenarioScalarWhereInput'][] | null; // [ScenarioScalarWhereInput!]
    disconnect?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    set?: NexusGenInputs['ScenarioWhereUniqueInput'][] | null; // [ScenarioWhereUniqueInput!]
    update?: NexusGenInputs['ScenarioUpdateWithWhereUniqueWithoutMerchantInput'][] | null; // [ScenarioUpdateWithWhereUniqueWithoutMerchantInput!]
    updateMany?: NexusGenInputs['ScenarioUpdateManyWithWhereWithoutMerchantInput'][] | null; // [ScenarioUpdateManyWithWhereWithoutMerchantInput!]
    upsert?: NexusGenInputs['ScenarioUpsertWithWhereUniqueWithoutMerchantInput'][] | null; // [ScenarioUpsertWithWhereUniqueWithoutMerchantInput!]
  }
  ScenarioUpdateWithWhereUniqueWithoutClientInput: { // input type
    data: NexusGenInputs['ScenarioUpdateWithoutClientInput']; // ScenarioUpdateWithoutClientInput!
    where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
  }
  ScenarioUpdateWithWhereUniqueWithoutMerchantInput: { // input type
    data: NexusGenInputs['ScenarioUpdateWithoutMerchantInput']; // ScenarioUpdateWithoutMerchantInput!
    where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
  }
  ScenarioUpdateWithoutClientInput: { // input type
    VAT?: NexusGenEnums['VAT'] | null; // VAT
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays?: number | null; // Int
    imageUrl?: string | null; // String
    merchant?: NexusGenInputs['MerchantUpdateOneRequiredWithoutScenarioInput'] | null; // MerchantUpdateOneRequiredWithoutScenarioInput
    name?: string | null; // String
    netPerOne?: number | null; // Int
    notes?: string | null; // String
    paymentType?: string | null; // String
    unitType?: NexusGenEnums['Unit'] | null; // Unit
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioUpdateWithoutMerchantInput: { // input type
    VAT?: NexusGenEnums['VAT'] | null; // VAT
    client?: NexusGenInputs['ClientUpdateOneRequiredWithoutScenarioInput'] | null; // ClientUpdateOneRequiredWithoutScenarioInput
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dueDateDays?: number | null; // Int
    imageUrl?: string | null; // String
    name?: string | null; // String
    netPerOne?: number | null; // Int
    notes?: string | null; // String
    paymentType?: string | null; // String
    unitType?: NexusGenEnums['Unit'] | null; // Unit
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ScenarioUpsertWithWhereUniqueWithoutClientInput: { // input type
    create: NexusGenInputs['ScenarioCreateWithoutClientInput']; // ScenarioCreateWithoutClientInput!
    update: NexusGenInputs['ScenarioUpdateWithoutClientInput']; // ScenarioUpdateWithoutClientInput!
    where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
  }
  ScenarioUpsertWithWhereUniqueWithoutMerchantInput: { // input type
    create: NexusGenInputs['ScenarioCreateWithoutMerchantInput']; // ScenarioCreateWithoutMerchantInput!
    update: NexusGenInputs['ScenarioUpdateWithoutMerchantInput']; // ScenarioUpdateWithoutMerchantInput!
    where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
  }
  ScenarioWhereInput: { // input type
    AND?: NexusGenInputs['ScenarioWhereInput'][] | null; // [ScenarioWhereInput!]
    NOT?: NexusGenInputs['ScenarioWhereInput'][] | null; // [ScenarioWhereInput!]
    OR?: NexusGenInputs['ScenarioWhereInput'][] | null; // [ScenarioWhereInput!]
    VAT?: NexusGenInputs['EnumVATFilter'] | null; // EnumVATFilter
    client?: NexusGenInputs['ClientWhereInput'] | null; // ClientWhereInput
    clientId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    dueDateDays?: NexusGenInputs['IntFilter'] | null; // IntFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    imageUrl?: NexusGenInputs['StringFilter'] | null; // StringFilter
    merchant?: NexusGenInputs['MerchantWhereInput'] | null; // MerchantWhereInput
    merchantId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    netPerOne?: NexusGenInputs['IntFilter'] | null; // IntFilter
    notes?: NexusGenInputs['StringFilter'] | null; // StringFilter
    paymentType?: NexusGenInputs['StringFilter'] | null; // StringFilter
    unitType?: NexusGenInputs['EnumUnitFilter'] | null; // EnumUnitFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  ScenarioWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  StringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
}

export interface NexusGenEnums {
  QueryMode: "default" | "insensitive"
  SortOrder: "asc" | "desc"
  Unit: "HOUR" | "ITEM"
  VAT: "DOES_NOT_CONCERN" | "PERCENT_0" | "PERCENT_23" | "ZWOLNIONY"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Client: { // root type
    VATId?: string | null; // String
    address: string; // String!
    city: string; // String!
    country: string; // String!
    id: number; // Int!
    name: string; // String!
    postCode: string; // String!
  }
  ClientList: { // root type
    list?: Array<NexusGenRootTypes['Client'] | null> | null; // [Client]
    totalCount?: number | null; // Int
  }
  Merchant: { // root type
    VATId: string; // String!
    address: string; // String!
    bankAccountEur?: string | null; // String
    bankAccountPln: string; // String!
    bankName: string; // String!
    city: string; // String!
    companyName: string; // String!
    country: string; // String!
    email: string; // String!
    id: number; // Int!
    issuerName: string; // String!
    postCode: string; // String!
  }
  MerchantList: { // root type
    list?: Array<NexusGenRootTypes['Merchant'] | null> | null; // [Merchant]
    totalCount?: number | null; // Int
  }
  Mutation: {};
  PaginatedClientList: { // root type
    filters?: NexusGenRootTypes['PaginatedClientListFilters'] | null; // PaginatedClientListFilters
    list?: Array<NexusGenRootTypes['Client'] | null> | null; // [Client]
    totalCount?: number | null; // Int
  }
  PaginatedClientListFilters: { // root type
    city?: Array<string | null> | null; // [String]
    country?: Array<string | null> | null; // [String]
  }
  PaginatedMerchantList: { // root type
    filters?: NexusGenRootTypes['PaginatedMerchantListFilters'] | null; // PaginatedMerchantListFilters
    list?: Array<NexusGenRootTypes['Merchant'] | null> | null; // [Merchant]
    totalCount?: number | null; // Int
  }
  PaginatedMerchantListFilters: { // root type
    bank?: Array<string | null> | null; // [String]
    city?: Array<string | null> | null; // [String]
    country?: Array<string | null> | null; // [String]
  }
  Query: {};
  Scenario: { // root type
    VAT: NexusGenEnums['VAT']; // VAT!
    clientId: number; // Int!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    dueDateDays: number; // Int!
    id: number; // Int!
    imageUrl: string; // String!
    merchantId: number; // Int!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    paymentType: string; // String!
    unitType: NexusGenEnums['Unit']; // Unit!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Client: { // field return type
    Scenario: NexusGenRootTypes['Scenario'][]; // [Scenario!]!
    VATId: string | null; // String
    address: string; // String!
    city: string; // String!
    country: string; // String!
    id: number; // Int!
    name: string; // String!
    postCode: string; // String!
  }
  ClientList: { // field return type
    list: Array<NexusGenRootTypes['Client'] | null> | null; // [Client]
    totalCount: number | null; // Int
  }
  Merchant: { // field return type
    Scenario: NexusGenRootTypes['Scenario'][]; // [Scenario!]!
    VATId: string; // String!
    address: string; // String!
    bankAccountEur: string | null; // String
    bankAccountPln: string; // String!
    bankName: string; // String!
    city: string; // String!
    companyName: string; // String!
    country: string; // String!
    email: string; // String!
    id: number; // Int!
    issuerName: string; // String!
    postCode: string; // String!
  }
  MerchantList: { // field return type
    list: Array<NexusGenRootTypes['Merchant'] | null> | null; // [Merchant]
    totalCount: number | null; // Int
  }
  Mutation: { // field return type
    createOneClient: NexusGenRootTypes['Client']; // Client!
    createOneMerchant: NexusGenRootTypes['Merchant']; // Merchant!
    createOneScenario: NexusGenRootTypes['Scenario']; // Scenario!
    deleteOneClient: NexusGenRootTypes['Client'] | null; // Client
    deleteOneMerchant: NexusGenRootTypes['Merchant'] | null; // Merchant
    updateOneClient: NexusGenRootTypes['Client'] | null; // Client
    updateOneMerchant: NexusGenRootTypes['Merchant'] | null; // Merchant
    updateOneScenario: NexusGenRootTypes['Scenario'] | null; // Scenario
  }
  PaginatedClientList: { // field return type
    filters: NexusGenRootTypes['PaginatedClientListFilters'] | null; // PaginatedClientListFilters
    list: Array<NexusGenRootTypes['Client'] | null> | null; // [Client]
    totalCount: number | null; // Int
  }
  PaginatedClientListFilters: { // field return type
    city: Array<string | null> | null; // [String]
    country: Array<string | null> | null; // [String]
  }
  PaginatedMerchantList: { // field return type
    filters: NexusGenRootTypes['PaginatedMerchantListFilters'] | null; // PaginatedMerchantListFilters
    list: Array<NexusGenRootTypes['Merchant'] | null> | null; // [Merchant]
    totalCount: number | null; // Int
  }
  PaginatedMerchantListFilters: { // field return type
    bank: Array<string | null> | null; // [String]
    city: Array<string | null> | null; // [String]
    country: Array<string | null> | null; // [String]
  }
  Query: { // field return type
    client: NexusGenRootTypes['Client'] | null; // Client
    clientList: NexusGenRootTypes['ClientList'] | null; // ClientList
    clients: NexusGenRootTypes['Client'][]; // [Client!]!
    merchant: NexusGenRootTypes['Merchant'] | null; // Merchant
    merchantList: NexusGenRootTypes['MerchantList'] | null; // MerchantList
    merchants: NexusGenRootTypes['Merchant'][]; // [Merchant!]!
    paginatedClientList: NexusGenRootTypes['PaginatedClientList'] | null; // PaginatedClientList
    paginatedMerchantList: NexusGenRootTypes['PaginatedMerchantList'] | null; // PaginatedMerchantList
    scenario: NexusGenRootTypes['Scenario'] | null; // Scenario
    scenarios: NexusGenRootTypes['Scenario'][]; // [Scenario!]!
  }
  Scenario: { // field return type
    VAT: NexusGenEnums['VAT']; // VAT!
    client: NexusGenRootTypes['Client']; // Client!
    clientId: number; // Int!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    dueDateDays: number; // Int!
    id: number; // Int!
    imageUrl: string; // String!
    merchant: NexusGenRootTypes['Merchant']; // Merchant!
    merchantId: number; // Int!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    paymentType: string; // String!
    unitType: NexusGenEnums['Unit']; // Unit!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenFieldTypeNames {
  Client: { // field return type name
    Scenario: 'Scenario'
    VATId: 'String'
    address: 'String'
    city: 'String'
    country: 'String'
    id: 'Int'
    name: 'String'
    postCode: 'String'
  }
  ClientList: { // field return type name
    list: 'Client'
    totalCount: 'Int'
  }
  Merchant: { // field return type name
    Scenario: 'Scenario'
    VATId: 'String'
    address: 'String'
    bankAccountEur: 'String'
    bankAccountPln: 'String'
    bankName: 'String'
    city: 'String'
    companyName: 'String'
    country: 'String'
    email: 'String'
    id: 'Int'
    issuerName: 'String'
    postCode: 'String'
  }
  MerchantList: { // field return type name
    list: 'Merchant'
    totalCount: 'Int'
  }
  Mutation: { // field return type name
    createOneClient: 'Client'
    createOneMerchant: 'Merchant'
    createOneScenario: 'Scenario'
    deleteOneClient: 'Client'
    deleteOneMerchant: 'Merchant'
    updateOneClient: 'Client'
    updateOneMerchant: 'Merchant'
    updateOneScenario: 'Scenario'
  }
  PaginatedClientList: { // field return type name
    filters: 'PaginatedClientListFilters'
    list: 'Client'
    totalCount: 'Int'
  }
  PaginatedClientListFilters: { // field return type name
    city: 'String'
    country: 'String'
  }
  PaginatedMerchantList: { // field return type name
    filters: 'PaginatedMerchantListFilters'
    list: 'Merchant'
    totalCount: 'Int'
  }
  PaginatedMerchantListFilters: { // field return type name
    bank: 'String'
    city: 'String'
    country: 'String'
  }
  Query: { // field return type name
    client: 'Client'
    clientList: 'ClientList'
    clients: 'Client'
    merchant: 'Merchant'
    merchantList: 'MerchantList'
    merchants: 'Merchant'
    paginatedClientList: 'PaginatedClientList'
    paginatedMerchantList: 'PaginatedMerchantList'
    scenario: 'Scenario'
    scenarios: 'Scenario'
  }
  Scenario: { // field return type name
    VAT: 'VAT'
    client: 'Client'
    clientId: 'Int'
    createdAt: 'DateTime'
    dueDateDays: 'Int'
    id: 'Int'
    imageUrl: 'String'
    merchant: 'Merchant'
    merchantId: 'Int'
    name: 'String'
    netPerOne: 'Int'
    notes: 'String'
    paymentType: 'String'
    unitType: 'Unit'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Client: {
    Scenario: { // args
      cursor?: NexusGenInputs['ScenarioWhereUniqueInput'] | null; // ScenarioWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Merchant: {
    Scenario: { // args
      cursor?: NexusGenInputs['ScenarioWhereUniqueInput'] | null; // ScenarioWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Mutation: {
    createOneClient: { // args
      data: NexusGenInputs['ClientCreateInput']; // ClientCreateInput!
    }
    createOneMerchant: { // args
      data: NexusGenInputs['MerchantCreateInput']; // MerchantCreateInput!
    }
    createOneScenario: { // args
      data: NexusGenInputs['ScenarioCreateInput']; // ScenarioCreateInput!
    }
    deleteOneClient: { // args
      where: NexusGenInputs['ClientWhereUniqueInput']; // ClientWhereUniqueInput!
    }
    deleteOneMerchant: { // args
      where: NexusGenInputs['MerchantWhereUniqueInput']; // MerchantWhereUniqueInput!
    }
    updateOneClient: { // args
      data: NexusGenInputs['ClientUpdateInput']; // ClientUpdateInput!
      where: NexusGenInputs['ClientWhereUniqueInput']; // ClientWhereUniqueInput!
    }
    updateOneMerchant: { // args
      data: NexusGenInputs['MerchantUpdateInput']; // MerchantUpdateInput!
      where: NexusGenInputs['MerchantWhereUniqueInput']; // MerchantWhereUniqueInput!
    }
    updateOneScenario: { // args
      data: NexusGenInputs['ScenarioUpdateInput']; // ScenarioUpdateInput!
      where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
    }
  }
  Query: {
    client: { // args
      where: NexusGenInputs['ClientWhereUniqueInput']; // ClientWhereUniqueInput!
    }
    clients: { // args
      cursor?: NexusGenInputs['ClientWhereUniqueInput'] | null; // ClientWhereUniqueInput
      orderBy?: NexusGenInputs['ClientOrderByInput'][] | null; // [ClientOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['ClientWhereInput'] | null; // ClientWhereInput
    }
    merchant: { // args
      where: NexusGenInputs['MerchantWhereUniqueInput']; // MerchantWhereUniqueInput!
    }
    merchants: { // args
      cursor?: NexusGenInputs['MerchantWhereUniqueInput'] | null; // MerchantWhereUniqueInput
      orderBy?: NexusGenInputs['MerchantOrderByInput'][] | null; // [MerchantOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['MerchantWhereInput'] | null; // MerchantWhereInput
    }
    paginatedClientList: { // args
      orderBy?: Array<NexusGenInputs['ClientOrderByInput'] | null> | null; // [ClientOrderByInput]
      skip: number; // Int!
      take: number; // Int!
      where?: NexusGenInputs['ClientWhereInput'] | null; // ClientWhereInput
    }
    paginatedMerchantList: { // args
      orderBy?: Array<NexusGenInputs['MerchantOrderByInput'] | null> | null; // [MerchantOrderByInput]
      skip: number; // Int!
      take: number; // Int!
      where?: NexusGenInputs['MerchantWhereInput'] | null; // MerchantWhereInput
    }
    scenario: { // args
      where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
    }
    scenarios: { // args
      cursor?: NexusGenInputs['ScenarioWhereUniqueInput'] | null; // ScenarioWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
}