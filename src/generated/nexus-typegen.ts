/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as Context from "./../graphql/context"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BuyerCreateOneWithoutScenarioInput: { // input type
    connect?: NexusGenInputs['BuyerWhereUniqueInput'] | null; // BuyerWhereUniqueInput
    connectOrCreate?: NexusGenInputs['BuyerCreateOrConnectWithoutScenarioInput'] | null; // BuyerCreateOrConnectWithoutScenarioInput
    create?: NexusGenInputs['BuyerCreateWithoutScenarioInput'] | null; // BuyerCreateWithoutScenarioInput
  }
  BuyerCreateOrConnectWithoutScenarioInput: { // input type
    create: NexusGenInputs['BuyerCreateWithoutScenarioInput']; // BuyerCreateWithoutScenarioInput!
    where: NexusGenInputs['BuyerWhereUniqueInput']; // BuyerWhereUniqueInput!
  }
  BuyerCreateWithoutScenarioInput: { // input type
    address: string; // String!
    id?: string | null; // String
    name: string; // String!
    nip: number; // Int!
    postAddress: string; // String!
  }
  BuyerUpdateOneRequiredWithoutScenarioInput: { // input type
    connect?: NexusGenInputs['BuyerWhereUniqueInput'] | null; // BuyerWhereUniqueInput
    connectOrCreate?: NexusGenInputs['BuyerCreateOrConnectWithoutScenarioInput'] | null; // BuyerCreateOrConnectWithoutScenarioInput
    create?: NexusGenInputs['BuyerCreateWithoutScenarioInput'] | null; // BuyerCreateWithoutScenarioInput
    update?: NexusGenInputs['BuyerUpdateWithoutScenarioInput'] | null; // BuyerUpdateWithoutScenarioInput
    upsert?: NexusGenInputs['BuyerUpsertWithoutScenarioInput'] | null; // BuyerUpsertWithoutScenarioInput
  }
  BuyerUpdateWithoutScenarioInput: { // input type
    address?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    id?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    name?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    nip?: NexusGenInputs['IntFieldUpdateOperationsInput'] | null; // IntFieldUpdateOperationsInput
    postAddress?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
  }
  BuyerUpsertWithoutScenarioInput: { // input type
    create: NexusGenInputs['BuyerCreateWithoutScenarioInput']; // BuyerCreateWithoutScenarioInput!
    update: NexusGenInputs['BuyerUpdateWithoutScenarioInput']; // BuyerUpdateWithoutScenarioInput!
  }
  BuyerWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  DateTimeFieldUpdateOperationsInput: { // input type
    set?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  IntFieldUpdateOperationsInput: { // input type
    decrement?: number | null; // Int
    divide?: number | null; // Int
    increment?: number | null; // Int
    multiply?: number | null; // Int
    set?: number | null; // Int
  }
  ScenarioCreateInput: { // input type
    amount?: number | null; // Int
    buyer: NexusGenInputs['BuyerCreateOneWithoutScenarioInput']; // BuyerCreateOneWithoutScenarioInput!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    currency?: string | null; // String
    description: string; // String!
    id?: string | null; // String
    name: string; // String!
    netPerOne?: number | null; // Int
    notes: string; // String!
    order: number; // Int!
    paymentType?: string | null; // String
    seller: NexusGenInputs['SellerCreateOneWithoutScenarioInput']; // SellerCreateOneWithoutScenarioInput!
    totalGross: number; // Int!
    unit?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    VAT?: number | null; // Int
  }
  ScenarioUpdateInput: { // input type
    amount?: NexusGenInputs['IntFieldUpdateOperationsInput'] | null; // IntFieldUpdateOperationsInput
    buyer?: NexusGenInputs['BuyerUpdateOneRequiredWithoutScenarioInput'] | null; // BuyerUpdateOneRequiredWithoutScenarioInput
    createdAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
    currency?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    description?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    id?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    name?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    netPerOne?: NexusGenInputs['IntFieldUpdateOperationsInput'] | null; // IntFieldUpdateOperationsInput
    notes?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    order?: NexusGenInputs['IntFieldUpdateOperationsInput'] | null; // IntFieldUpdateOperationsInput
    paymentType?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    seller?: NexusGenInputs['SellerUpdateOneRequiredWithoutScenarioInput'] | null; // SellerUpdateOneRequiredWithoutScenarioInput
    totalGross?: NexusGenInputs['IntFieldUpdateOperationsInput'] | null; // IntFieldUpdateOperationsInput
    unit?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    updatedAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
    VAT?: NexusGenInputs['IntFieldUpdateOperationsInput'] | null; // IntFieldUpdateOperationsInput
  }
  ScenarioWhereUniqueInput: { // input type
    id?: string | null; // String
    order?: number | null; // Int
  }
  SellerCreateOneWithoutScenarioInput: { // input type
    connect?: NexusGenInputs['SellerWhereUniqueInput'] | null; // SellerWhereUniqueInput
    connectOrCreate?: NexusGenInputs['SellerCreateOrConnectWithoutScenarioInput'] | null; // SellerCreateOrConnectWithoutScenarioInput
    create?: NexusGenInputs['SellerCreateWithoutScenarioInput'] | null; // SellerCreateWithoutScenarioInput
  }
  SellerCreateOrConnectWithoutScenarioInput: { // input type
    create: NexusGenInputs['SellerCreateWithoutScenarioInput']; // SellerCreateWithoutScenarioInput!
    where: NexusGenInputs['SellerWhereUniqueInput']; // SellerWhereUniqueInput!
  }
  SellerCreateWithoutScenarioInput: { // input type
    address: string; // String!
    bankAccount: string; // String!
    bankName: string; // String!
    email: string; // String!
    id?: string | null; // String
    name: string; // String!
    nip: number; // Int!
    postAddress: string; // String!
  }
  SellerUpdateOneRequiredWithoutScenarioInput: { // input type
    connect?: NexusGenInputs['SellerWhereUniqueInput'] | null; // SellerWhereUniqueInput
    connectOrCreate?: NexusGenInputs['SellerCreateOrConnectWithoutScenarioInput'] | null; // SellerCreateOrConnectWithoutScenarioInput
    create?: NexusGenInputs['SellerCreateWithoutScenarioInput'] | null; // SellerCreateWithoutScenarioInput
    update?: NexusGenInputs['SellerUpdateWithoutScenarioInput'] | null; // SellerUpdateWithoutScenarioInput
    upsert?: NexusGenInputs['SellerUpsertWithoutScenarioInput'] | null; // SellerUpsertWithoutScenarioInput
  }
  SellerUpdateWithoutScenarioInput: { // input type
    address?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    bankAccount?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    bankName?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    email?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    id?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    name?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    nip?: NexusGenInputs['IntFieldUpdateOperationsInput'] | null; // IntFieldUpdateOperationsInput
    postAddress?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
  }
  SellerUpsertWithoutScenarioInput: { // input type
    create: NexusGenInputs['SellerCreateWithoutScenarioInput']; // SellerCreateWithoutScenarioInput!
    update: NexusGenInputs['SellerUpdateWithoutScenarioInput']; // SellerUpdateWithoutScenarioInput!
  }
  SellerWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  StringFieldUpdateOperationsInput: { // input type
    set?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Buyer: { // root type
    address: string; // String!
    id: string; // String!
    name: string; // String!
    nip: number; // Int!
    postAddress: string; // String!
  }
  Mutation: {};
  Query: {};
  Scenario: { // root type
    amount: number; // Int!
    buyerId: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: string; // String!
    description: string; // String!
    id: string; // String!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    order: number; // Int!
    paymentType: string; // String!
    sellerId: string; // String!
    totalGross: number; // Int!
    unit: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    VAT: number; // Int!
  }
  Seller: { // root type
    address: string; // String!
    bankAccount: string; // String!
    bankName: string; // String!
    email: string; // String!
    id: string; // String!
    name: string; // String!
    nip: number; // Int!
    postAddress: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Buyer: { // field return type
    address: string; // String!
    id: string; // String!
    name: string; // String!
    nip: number; // Int!
    postAddress: string; // String!
    Scenario: NexusGenRootTypes['Scenario'][]; // [Scenario!]!
  }
  Mutation: { // field return type
    createOneScenario: NexusGenRootTypes['Scenario']; // Scenario!
    updateOneScenario: NexusGenRootTypes['Scenario'] | null; // Scenario
  }
  Query: { // field return type
    scenario: NexusGenRootTypes['Scenario'] | null; // Scenario
    scenarios: NexusGenRootTypes['Scenario'][]; // [Scenario!]!
  }
  Scenario: { // field return type
    amount: number; // Int!
    buyer: NexusGenRootTypes['Buyer']; // Buyer!
    buyerId: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    currency: string; // String!
    description: string; // String!
    id: string; // String!
    name: string; // String!
    netPerOne: number; // Int!
    notes: string; // String!
    order: number; // Int!
    paymentType: string; // String!
    seller: NexusGenRootTypes['Seller']; // Seller!
    sellerId: string; // String!
    totalGross: number; // Int!
    unit: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    VAT: number; // Int!
  }
  Seller: { // field return type
    address: string; // String!
    bankAccount: string; // String!
    bankName: string; // String!
    email: string; // String!
    id: string; // String!
    name: string; // String!
    nip: number; // Int!
    postAddress: string; // String!
    Scenario: NexusGenRootTypes['Scenario'][]; // [Scenario!]!
  }
}

export interface NexusGenFieldTypeNames {
  Buyer: { // field return type name
    address: 'String'
    id: 'String'
    name: 'String'
    nip: 'Int'
    postAddress: 'String'
    Scenario: 'Scenario'
  }
  Mutation: { // field return type name
    createOneScenario: 'Scenario'
    updateOneScenario: 'Scenario'
  }
  Query: { // field return type name
    scenario: 'Scenario'
    scenarios: 'Scenario'
  }
  Scenario: { // field return type name
    amount: 'Int'
    buyer: 'Buyer'
    buyerId: 'String'
    createdAt: 'DateTime'
    currency: 'String'
    description: 'String'
    id: 'String'
    name: 'String'
    netPerOne: 'Int'
    notes: 'String'
    order: 'Int'
    paymentType: 'String'
    seller: 'Seller'
    sellerId: 'String'
    totalGross: 'Int'
    unit: 'String'
    updatedAt: 'DateTime'
    VAT: 'Int'
  }
  Seller: { // field return type name
    address: 'String'
    bankAccount: 'String'
    bankName: 'String'
    email: 'String'
    id: 'String'
    name: 'String'
    nip: 'Int'
    postAddress: 'String'
    Scenario: 'Scenario'
  }
}

export interface NexusGenArgTypes {
  Buyer: {
    Scenario: { // args
      cursor?: NexusGenInputs['ScenarioWhereUniqueInput'] | null; // ScenarioWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Mutation: {
    createOneScenario: { // args
      data: NexusGenInputs['ScenarioCreateInput']; // ScenarioCreateInput!
    }
    updateOneScenario: { // args
      data: NexusGenInputs['ScenarioUpdateInput']; // ScenarioUpdateInput!
      where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
    }
  }
  Query: {
    scenario: { // args
      where: NexusGenInputs['ScenarioWhereUniqueInput']; // ScenarioWhereUniqueInput!
    }
    scenarios: { // args
      cursor?: NexusGenInputs['ScenarioWhereUniqueInput'] | null; // ScenarioWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Seller: {
    Scenario: { // args
      cursor?: NexusGenInputs['ScenarioWhereUniqueInput'] | null; // ScenarioWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
}