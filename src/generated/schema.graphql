### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Buyer {
  address: String!
  id: String!
  name: String!
  nip: Int!
  postAddress: String!
  Scenario(cursor: ScenarioWhereUniqueInput, skip: Int, take: Int): [Scenario!]!
}

input BuyerCreateOneWithoutScenarioInput {
  connect: BuyerWhereUniqueInput
  connectOrCreate: BuyerCreateOrConnectWithoutScenarioInput
  create: BuyerCreateWithoutScenarioInput
}

input BuyerCreateOrConnectWithoutScenarioInput {
  create: BuyerCreateWithoutScenarioInput!
  where: BuyerWhereUniqueInput!
}

input BuyerCreateWithoutScenarioInput {
  address: String!
  id: String
  name: String!
  nip: Int!
  postAddress: String!
}

input BuyerUpdateOneRequiredWithoutScenarioInput {
  connect: BuyerWhereUniqueInput
  connectOrCreate: BuyerCreateOrConnectWithoutScenarioInput
  create: BuyerCreateWithoutScenarioInput
  update: BuyerUpdateWithoutScenarioInput
  upsert: BuyerUpsertWithoutScenarioInput
}

input BuyerUpdateWithoutScenarioInput {
  address: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nip: IntFieldUpdateOperationsInput
  postAddress: StringFieldUpdateOperationsInput
}

input BuyerUpsertWithoutScenarioInput {
  create: BuyerCreateWithoutScenarioInput!
  update: BuyerUpdateWithoutScenarioInput!
}

input BuyerWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

type Mutation {
  createOneScenario(data: ScenarioCreateInput!): Scenario!
  updateOneScenario(data: ScenarioUpdateInput!, where: ScenarioWhereUniqueInput!): Scenario
}

type Query {
  scenario(where: ScenarioWhereUniqueInput!): Scenario
  scenarios(cursor: ScenarioWhereUniqueInput, skip: Int, take: Int): [Scenario!]!
}

type Scenario {
  amount: Int!
  buyer: Buyer!
  buyerId: String!
  createdAt: DateTime!
  currency: String!
  description: String!
  id: String!
  name: String!
  netPerOne: Int!
  notes: String!
  order: Int!
  paymentType: String!
  seller: Seller!
  sellerId: String!
  totalGross: Int!
  unit: String!
  updatedAt: DateTime!
  VAT: Int!
}

input ScenarioCreateInput {
  amount: Int
  buyer: BuyerCreateOneWithoutScenarioInput!
  createdAt: DateTime
  currency: String
  description: String!
  id: String
  name: String!
  netPerOne: Int!
  notes: String!
  order: Int!
  paymentType: String
  seller: SellerCreateOneWithoutScenarioInput!
  totalGross: Int!
  unit: String
  updatedAt: DateTime
  VAT: Int!
}

input ScenarioUpdateInput {
  amount: IntFieldUpdateOperationsInput
  buyer: BuyerUpdateOneRequiredWithoutScenarioInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currency: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  netPerOne: IntFieldUpdateOperationsInput
  notes: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  paymentType: StringFieldUpdateOperationsInput
  seller: SellerUpdateOneRequiredWithoutScenarioInput
  totalGross: IntFieldUpdateOperationsInput
  unit: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  VAT: IntFieldUpdateOperationsInput
}

input ScenarioWhereUniqueInput {
  id: String
  order: Int
}

type Seller {
  address: String!
  bankAccount: String!
  bankName: String!
  email: String!
  id: String!
  name: String!
  nip: Int!
  postAddress: String!
  Scenario(cursor: ScenarioWhereUniqueInput, skip: Int, take: Int): [Scenario!]!
}

input SellerCreateOneWithoutScenarioInput {
  connect: SellerWhereUniqueInput
  connectOrCreate: SellerCreateOrConnectWithoutScenarioInput
  create: SellerCreateWithoutScenarioInput
}

input SellerCreateOrConnectWithoutScenarioInput {
  create: SellerCreateWithoutScenarioInput!
  where: SellerWhereUniqueInput!
}

input SellerCreateWithoutScenarioInput {
  address: String!
  bankAccount: String!
  bankName: String!
  email: String!
  id: String
  name: String!
  nip: Int!
  postAddress: String!
}

input SellerUpdateOneRequiredWithoutScenarioInput {
  connect: SellerWhereUniqueInput
  connectOrCreate: SellerCreateOrConnectWithoutScenarioInput
  create: SellerCreateWithoutScenarioInput
  update: SellerUpdateWithoutScenarioInput
  upsert: SellerUpsertWithoutScenarioInput
}

input SellerUpdateWithoutScenarioInput {
  address: StringFieldUpdateOperationsInput
  bankAccount: StringFieldUpdateOperationsInput
  bankName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nip: IntFieldUpdateOperationsInput
  postAddress: StringFieldUpdateOperationsInput
}

input SellerUpsertWithoutScenarioInput {
  create: SellerCreateWithoutScenarioInput!
  update: SellerUpdateWithoutScenarioInput!
}

input SellerWhereUniqueInput {
  id: String
}

input StringFieldUpdateOperationsInput {
  set: String
}
