// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Client {
  id       Int        @id @default(autoincrement())
  name     String
  address  String
  postCode String
  city     String
  country  String
  VATId    String?
  Scenario Scenario[]
}

model Merchant {
  id             Int        @id @default(autoincrement())
  issuerName     String
  companyName    String
  address        String
  postCode       String
  city           String
  country        String
  VATId          String
  email          String
  bankName       String
  bankAccountPln String
  bankAccountEur String?
  Scenario       Scenario[]
}

enum UnitType {
  ITEMS
  HOURS
}

model Scenario {
  id          Int      @id @default(autoincrement())
  name        String
  paymentType String
  imageUrl    String
  netPerOne   Int
  VAT         String
  amount      Int
  unitType    UnitType
  notes       String
  dueDay      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  client      Client   @relation(fields: [clientId], references: [id])
  merchant    Merchant @relation(fields: [merchantId], references: [id])
  clientId    Int
  merchantId  Int
}

model Invoice {
  id        String   @id
  issueDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  content   Json
}

// >>>>>>>>>>>>>>>>>>>>>>>>>>>>> AUTH <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}
